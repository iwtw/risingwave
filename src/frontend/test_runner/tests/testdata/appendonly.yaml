# This file is automatically generated. See `src/frontend/test_runner/README.md` for more information.
- sql: |
    create table t1 (v1 int, v2 int) with ('appendonly' = true);
    select v1, max(v2) as mx2 from t1 group by v1;
  stream_plan: |
    StreamMaterialize { columns: [v1, agg#0(hidden), mx2], pk_columns: [v1] }
      StreamHashAgg { group_keys: [$0], aggs: [count, max($1)] }
        StreamExchange { dist: HashShard([0]), append_only: true }
          StreamTableScan { table: t1, columns: [v1, v2, _row_id], pk_indices: [2], append_only: true }
- sql: |
    create table t1 (v1 int, v2 int) with ('appendonly' = true);
    create table t2 (v1 int, v3 int) with ('appendonly' = true);
    select t1.v1 as id, v2, v3 from t1 join t2 on t1.v1=t2.v1;
  stream_plan: |
    StreamMaterialize { columns: [id, v2, v3, _row_id(hidden), _row_id#1(hidden)], pk_columns: [_row_id, _row_id#1], append_only: true }
      StreamExchange { dist: HashShard([3, 4]), append_only: true }
        StreamProject { exprs: [$0, $1, $4, $2, $5], appendonly: true }
          StreamHashJoin { type: Inner, predicate: $0 = $3, append_only: true }
            StreamExchange { dist: HashShard([0]), append_only: true }
              StreamTableScan { table: t1, columns: [v1, v2, _row_id], pk_indices: [2], append_only: true }
            StreamExchange { dist: HashShard([0]), append_only: true }
              StreamTableScan { table: t2, columns: [v1, v3, _row_id], pk_indices: [2], append_only: true }
